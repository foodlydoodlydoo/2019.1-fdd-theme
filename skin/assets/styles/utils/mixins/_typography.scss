//Text single size item from map
@mixin text-size($size, $map: $typography-map) {
  $i: 0;

  @each $breakpoint, $breakpointMap in $map {
    @if $i == 0 {
      font-size: map_get($breakpointMap, $size);
    }

    @else {
      @include media(#{$breakpoint} up) {
        font-size: map_get($breakpointMap, $size);
      }
    }

    $i: $i + 1;
  }
}

//Text sizes items from map without breakpoints
@mixin text-sizes-simple($map) {
  @each $key, $values in $map {
    &--#{$key} {
      font-size: map_get($map, $key);
    }
  }
}

//Text sizes items from map
@mixin text-sizes($map: $typography-map) {
  $i: 0;

  @each $breakpoint, $breakpointMap in $map {
    @if $i == 0 {
      @include text-sizes-simple($breakpointMap);
    }

    @else {
      @include media(#{$breakpoint} up) {
        @include text-sizes-simple($breakpointMap);
      }
    }
    $i: $i + 1;
  }
}

//Text color items from map
@mixin text-colors($map: $color-map) {
  @each $key, $value in $map {
    &--#{$key} {
      color: $value;
    }
  }
}

//Link single color item from map
@mixin link-color($key) {
  color: map-get($key, color);

  .icon-animated-arrow__item {
    background-color: map-get($key, color);
  }

  &:hover {
    color: map-get($key, hover);

    .icon-animated-arrow__item {
      background-color: map-get($key, hover);
    }
  }
}

//Link color items from map
@mixin link-colors($map: $links-map) {
  @each $key, $value in $map {
    @if $key == 'default' {
      @include link-color($value);
    }

    @else {
      &--color-#{$key} {
        @include link-color($value);
      }
    }
  }
}

//For better font smoothing and fix button weight problem on mac
@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}


// FDD specific, keep in sync with fdd-block/common.scss

@mixin font-narrow-serif($weight: 300) {
  font-family: 'Oranienbaum', serif;
  font-weight: $weight;
}

@mixin font-home-page-title($weight: 300) {
  font-family: 'Noto Serif KR', serif;
  font-weight: $weight;
}

@mixin font-home-page-excerpt($size: 100%) {
  font-family: 'Spectral', serif;
  font-weight: 200;
  font-style: italic;
  font-size: $size;
}

@mixin base-font-family-set($weight: 300) {
  font-family: 'Gafata', sans-serif;
  font-weight: $weight;
}

@mixin fdd-home-category-name($size: inherited) {
  @if $size != inherited {
    @include text-size($size);
  }
  @include font-narrow-serif;
}

@mixin fdd-home-front-article-heading($size: inherited) {
  @if $size != inherited {
    @include text-size($size);
  }
  @include font-home-page-title(300);
}

@mixin fdd-home-oldish-article-heading($size: inherited) {
  @if $size != inherited {
    @include text-size($size);
  }
  @include font-home-page-title(300);
}

@mixin fdd-single-article-heading($size: false) {
  @if $size {
    @include text-size($size);
  }
  @include font-narrow-serif();
  color: $fdd-title-color;
}
